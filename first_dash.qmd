---
title: "Desempenho de carros dos anos 2000"
format: 
  dashboard:
    orientation: columns
server: shiny
---

```{r}
#| message: false
#| warning: false
#| context: setup
# Carrega todos os pacotes necessários
library(shiny)
library(ggplot2)
library(dplyr)
library(tidyr)

# Carrega e prepara os dados
data(mpg)
mpg_data <- mpg
modelos_disponiveis <- sort(unique(mpg_data$model))
```

## {.sidebar}

```{r}
h4("Selecione os modelos:")
checkboxGroupInput(
  "selected_models",
  label = NULL,
  choices = modelos_disponiveis,
  selected = modelos_disponiveis[1:3]
)
```

## Column {width=65%}

```{r}
#| title: "Desempenho"
plotOutput("grafico", height = "500px")
```

## Column {width=35%}

```{r}
#| title: "Eficiência"
tableOutput("tabela_output")
```

```{r}
#| context: server

# Dados reativos
dados <- reactive({
  req(input$selected_models)
  
  # Filtra dados sem usar pipe
  dados_filtrados <- filter(mpg_data, model %in% input$selected_models)
  dados_agrupados <- group_by(dados_filtrados, model, year, manufacturer)
  dados_resumidos <- summarise(dados_agrupados,
                              hwy = mean(hwy, na.rm = TRUE),
                              cty = mean(cty, na.rm = TRUE),
                              .groups = "drop")
  
  return(dados_resumidos)
})

# Gráfico
output$grafico <- renderPlot({
  req(dados())
  
  # Transforma dados para formato longo
  dados_longos <- pivot_longer(dados(), 
                               cols = c(hwy, cty),
                               names_to = "tipo",
                               values_to = "mpg")
  
  # Muda nomes dos tipos
  dados_longos$tipo <- ifelse(dados_longos$tipo == "hwy", "Estrada", "Cidade")
  
  # Cria gráfico
  ggplot(dados_longos, aes(x = year, y = mpg, color = model, linetype = tipo)) +
    geom_line(size = 1) +
    geom_point(size = 2) +
    facet_wrap(~manufacturer) +
    labs(title = "Desempenho dos Veículos",
         x = "Ano",
         y = "Milhas por Galão (MPG)",
         color = "Modelo",
         linetype = "Tipo") +
    theme_minimal() +
    theme(legend.position = "bottom",
          strip.text = element_text(size = 10))
})

# Tabela
output$tabela_output <- renderTable({
  req(dados())
  
  # Agrupa por modelo sem usar pipe
  dados_agrupados <- group_by(dados(), model)
  dados_resumidos <- summarise(dados_agrupados,
                              `Estrada (MPG)` = round(mean(hwy, na.rm = TRUE), 1),
                              `Cidade (MPG)` = round(mean(cty, na.rm = TRUE), 1),
                              .groups = "drop")
  
  # Ordena por eficiência na estrada
  dados_ordenados <- arrange(dados_resumidos, desc(`Estrada (MPG)`))
  
  # Renomeia coluna
  colnames(dados_ordenados)[1] <- "Modelo"
  
  return(dados_ordenados)
  
}, striped = TRUE, hover = TRUE, bordered = TRUE)
```